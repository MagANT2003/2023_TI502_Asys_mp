/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author Maga
 */
public class GRAPHICXY extends javax.swing.JFrame {

    /**
     * Creates new form GRAPHICXY
     */
    public GRAPHICXY() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDraw = new javax.swing.JButton();
        pnlDraw = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDraw.setText("DRAW");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 100, 40));

        pnlDraw.setBackground(new java.awt.Color(153, 153, 153));
        pnlDraw.setForeground(new java.awt.Color(255, 255, 255));
        pnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDrawMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDrawLayout = new javax.swing.GroupLayout(pnlDraw);
        pnlDraw.setLayout(pnlDrawLayout);
        pnlDrawLayout.setHorizontalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawLayout.setVerticalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 300, 300));

        setSize(new java.awt.Dimension(656, 519));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void drawAxis(){
      Graphics2D g= (Graphics2D) pnlDraw.getGraphics();
      g.setColor(Color.GRAY);
      g.fillRect(0, 0,Cordinate.WIDTH, Cordinate.HEIGHT);
      
      //DrawAsis (xmin, 0, xmax, 0
      g.setColor(Color.white);
      g.drawLine(
                   Cordinate.toScreenX(Cordinate.XMIN), 
                   Cordinate.toScreenY(0),    
                   Cordinate.toScreenX(Cordinate.XMAX),
                   Cordinate.toScreenY(0));
      /////////
      g.drawLine(
                   Cordinate.toScreenX(0), 
                   Cordinate.toScreenY(Cordinate.YMIN),    
                   Cordinate.toScreenX(0),
                   Cordinate.toScreenY(Cordinate.YMAX));
      //X TICS
      for(float dx=Cordinate.XMIN;dx<= Cordinate.XMAX; dx+= 1.0f){
           g.drawLine(
                   Cordinate.toScreenX(dx), 
                   Cordinate.toScreenY(-0.25f),    
                   Cordinate.toScreenX(dx),
                   Cordinate.toScreenY(-0.25f));
           
      }
      //Y TICS
      for(float dx=Cordinate.YMIN;dx<= Cordinate.YMAX; dx+= 1.0f){
           g.drawLine(
                   Cordinate.toScreenX(-0.25f), 
                   Cordinate.toScreenY(dx),    
                   Cordinate.toScreenX(-0.25f),
                   Cordinate.toScreenY(dx));
           
      }
    }
    
    private void drawFunction(){
        //TODO plot y=0 
        int npoint=100;
        float x[]= new float [npoint];
        float y[]= new float[npoint];
        float dy[]= new float[npoint];
        float Iy[]= new float[npoint];
        
        //Calcular x
        float dx = (Cordinate.XMAX- Cordinate.XMIN)/npoint;
        
        for(int i=0; i < npoint; i++){
        x[i]=Cordinate.XMIN+i*dx;
        y[i]= 0.1f* x[i] * x[i];
        dy[i]= 0.2f*x[i];
        Iy[i]=0.0333333f*x[i]*x[i];
        }
        Graphics2D g= (Graphics2D) pnlDraw.getGraphics();
        
        for(int i=0; i< npoint-1;i++){
            //
            g.setColor(Color.red);
            g.drawLine(
                   Cordinate.toScreenX(x[i]), 
                   Cordinate.toScreenY(y[i]),    
                   Cordinate.toScreenX(x[i+1]),
                   Cordinate.toScreenY(i+1));
            //dy
            g.setColor(Color.blue);
            g.drawLine(
                   Cordinate.toScreenX(x[i]), 
                   Cordinate.toScreenY(dy[i]),    
                   Cordinate.toScreenX(x[i+1]),
                   Cordinate.toScreenY(i+1));
            //iy
            g.setColor(Color.pink);
            g.drawLine(
                   Cordinate.toScreenX(x[i]), 
                   Cordinate.toScreenY(y[i]),    
                   Cordinate.toScreenX(x[i+1]),
                   Cordinate.toScreenY(i+1));
        }
    }
    
    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        // BOTON
        drawAxis();
    }//GEN-LAST:event_btnDrawActionPerformed

    private void pnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDrawMouseClicked
        //MOUSE CLIC:
        drawAxis();
        drawFunction();
    }//GEN-LAST:event_pnlDrawMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRAPHICXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRAPHICXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRAPHICXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRAPHICXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GRAPHICXY().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDraw;
    private javax.swing.JPanel pnlDraw;
    // End of variables declaration//GEN-END:variables
}
